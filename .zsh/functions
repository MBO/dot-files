#!/bin/zsh
#
# list contents of directory on every "cd"
#function chpwd
#{
#    integer ls_lines="$(ls -C | wc -l)"
#    if [[ $ls_lines -eq 0 ]]; then
#        echo No files found: Empty Directory 
#    else
#        ls | more
#        echo "\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -l | egrep \"^drw\" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -l | egrep -v \"^drw\" | grep -v total | wc -l` \e[1;32m]--"
#    fi
#    # source and create project environment
#    if [[ -f $PWD/.projectenv ]]; then
#        . $PWD/.projectenv
#    fi
#}

# viewing man pages
#function man {
#/usr/bin/man $* | col -bp | iconv -c | view -c 'set ft=man nomod nolist' -
#}

# reload zshrc
function src() {
    autoload -U zrecompile
    [[ -f ~/.zshrc ]] && zrecompile -p ~/.zshrc
    for i in "$(find ~/.zsh/ -type f)"; do
        [[ -f $i ]] && zrecompile -p $i
        [[ -f $i.zwc.old ]] && rm -f $i.zwc.old
    done
    [[ -f ~/.zcompdump ]] && zrecompile -p ~/.zcompdump
    [[ -f ~/.zcompdump ]] && zrecompile -p ~/.zcompdump
    [[ -f ~/.zshrc.zwc.old ]] && rm -f ~/.zshrc.zwc.old
    [[ -f ~/.zcompdump.zwc.old ]] && rm -f ~/.zcompdump.zwc.old
    source ~/.zshrc
}

# ruby gem functions
function guu() {
    set -x
    gem update --system
    gem update
}

# git functions
function ga() { git add $* }
function gl() { git log $* }
function gs() { git status $* }
function gp() { git push $* }
function gc() { git commit -m "$*" }
function gca() { git commit -am "$*" }
function gpl() { git pull $* }

function hack() {
    set -x

    current=`git branch | awk '/\*/ { print $2 }'` && \
        git fetch origin && \
        git rebase origin/master
}
function ship() {
    set -x

    current=`git branch | awk '/\*/ { print $2 }'` && \
        git checkout master && \
        git merge origin && \
        git merge $current && \
        git push origin master && \
        git checkout $current
}
function ssp() { hack && rake && ship }

function roll () {
    set -x

    FILE=$1
    shift
    case $FILE in
        *.tar.bz2|*.tbz|*.tar.gz|*.tgz|*.tar.lzma|*.tlz) tar cavf "$FILE" $* ;;
        *.gz) gzip "$FILE" $* ;;
        *.zip) zip -r "$FILE" $* ;;
        *.rar) rar "$FILE" $* ;;
        *.7z) 7za a -t7z "$FILE" $* ;;
    esac
}

function unroll () {
    set -x

    FILE=$1
    shift
    case $FILE in
        *.tar.bz2|*.tbz|*.tar.gz|*.tgz|*.tar.lzma|*.tlz) tar xavf "$FILE" ;;
        *.gz) gunzip "$FILE" ;;
        *.zip) unzip "$FILE" ;;
        *.rar) unrar e "$FILE" ;;
        *.7z) 7za e "$FILE" ;;
    esac
}

function mkcd() {
    set -x

    mkdir -p -- "$*" && \
        pushd -- "$*";
}
function mkcdtmp() {
    set -x

    mkdir -p -- "$*" && \
        pushd -- "$*" && \
        $SHELL && \
        popd && \
        rm -rf -- "$*"
}
function hex2dec { awk 'BEGIN { printf "%d\n",0x$1}'; }
function dec2hex { awk 'BEGIN { printf "%x\n",$1}'; }

function mkmine() { sudo chown -R ${USER} ${1:-.}; }
# sanitize - set file/directory owner and permissions to normal values (644/755)
# Usage: sanitize <file>
function sanitize() {
    sudo chown -R ${USER}.users "$@"
    chmod -R u=rwX,go=rX "$@"
}

#compdef '_files -g "*.gz *.tgz *.bz2 *.tbz *.zip *.rar *.tar *.lha"' extract_archive

function aptkeyadd() {
    gpg --recv-key $1 && \
        read -q "?Continue? (y/n)" && \
        gpg -a --export $1 | sudo apt-key add -
}
function wgetget() {
    #wget -r          -E               -N             -k              -K                 -l          -np         -nH                   -p
    #wget --recursive --html-extension --timestamping --convert-links --backup-converted --level=inf --no-parent --no-host-directories --page-requisites
    wget -r -E -N -k -K -l -np -nH -p "$*"
}
